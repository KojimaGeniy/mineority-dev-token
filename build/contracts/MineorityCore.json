{
  "contractName": "MineorityCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "buyToken",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getHostPrice",
      "outputs": [
        {
          "name": "hostPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_GPUClass",
          "type": "uint256"
        }
      ],
      "name": "sellToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ctoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_asicID",
          "type": "uint256"
        },
        {
          "name": "_pciVendorID",
          "type": "uint256"
        },
        {
          "name": "_pciDeviceID",
          "type": "uint256"
        },
        {
          "name": "_pciSubDeviceID",
          "type": "uint256"
        },
        {
          "name": "_pciSubVendorID",
          "type": "uint256"
        },
        {
          "name": "_memSizeMB",
          "type": "uint256"
        },
        {
          "name": "_memInfo",
          "type": "string"
        },
        {
          "name": "_asicManufacturer",
          "type": "string"
        },
        {
          "name": "_asicArchitecture",
          "type": "string"
        },
        {
          "name": "_GPUClass",
          "type": "uint256"
        }
      ],
      "name": "_mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToPurchaseDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "_burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceSignature_ERC721Optional",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSaleLot",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToPurchasePrice",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "name": "_hostingPeriods",
          "type": "uint256[]"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeSaleLot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getGPUPrice",
      "outputs": [
        {
          "name": "gpuPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToSaleLot",
      "outputs": [
        {
          "name": "seller",
          "type": "address"
        },
        {
          "name": "GPUClass",
          "type": "uint16"
        },
        {
          "name": "creationTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        },
        {
          "name": "_GPUPrice",
          "type": "uint256"
        },
        {
          "name": "_hostingPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToHostingPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCTO",
          "type": "address"
        }
      ],
      "name": "setCTO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "GPUClass",
          "type": "uint256"
        }
      ],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "GPUClass",
          "type": "uint256"
        }
      ],
      "name": "SaleClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SaleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "name": "asicID",
          "type": "uint256"
        },
        {
          "name": "pciVendorID",
          "type": "uint256"
        },
        {
          "name": "pciDeviceID",
          "type": "uint256"
        },
        {
          "name": "pciSubDeviceID",
          "type": "uint256"
        },
        {
          "name": "pciSubVendorID",
          "type": "uint256"
        },
        {
          "name": "memSizeMB",
          "type": "uint256"
        },
        {
          "name": "memInfo",
          "type": "string"
        },
        {
          "name": "asicManufacturer",
          "type": "string"
        },
        {
          "name": "asicArchitecture",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "56:1440:4:-;;;315:5:2;294:26;;;;;;;;;;;;;;;;;;;;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;176:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;153:119:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:119:4;255:10;242;;:23;;;;;;;;;;;;;;;;;;56:1440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "56:1440:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:278:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:278:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;131:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:876:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:32:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4010:227:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4010:227:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3961:123:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3961:123:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:408;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3087:408:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;736:93:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:93:6;;;;;;;;;;;;;;;;;;;;;;;908:442:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:442:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;162:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;162:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:354:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2455:354:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:92:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1402:92:4;;;;;;1209:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:19:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:19:7;;;;;;;;;;;;;;;;;;;;;;;;;;;256:1032:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:1032:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4437:187:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4437:187:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4606:91:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4606:91:7;;;;;;;;;;;;;;;;;;;;;;;;;;2291:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2291:126:2;;;;;;1650:174:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1650:174:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:157:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1317:157:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4730:203:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3398:380:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3398:380:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:60;;8:9:-1;5:2;;;30:1;27;20:12;5:2;582:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:519:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1404:519:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2683:70:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2683:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:161:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1103:161:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;892:158:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2030:76:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2030:76:2;;;;;;5138:252:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5138:252:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:61:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:1090;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4766:301;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4766:301:7;;;;;;;;;;;;;;;;;;;;;;;;;;176:29:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;176:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3663:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3663:233:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3784:220:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3784:220:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:251:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1901:251:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:55:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4305:295;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4305:295:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:61:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:848:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:848:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:848:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:848:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:848:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4164:148:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4164:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1751:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:278:6;465:4;1871:10:3;510:25:6;;494:41;;;:12;:41;;;;493:102;;;;1998:10:3;569:25:6;;553:41;;;:12;:41;;;;493:102;:171;;;;2667:10:3;628:35:6;;612:51;;;:12;:51;;;;493:171;485:180;;394:278;;;:::o;131:25:2:-;;;;;;;;;;;;;:::o;2452:876:7:-;2550:19;2697:13;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2572:19:7;:29;2592:8;2572:29;;;;;;;;;;;2550:51;;2684:1;2636:50;;:19;:29;2656:8;2636:29;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;;2628:59;;;;;;;;2713:63;2722:19;:29;2742:8;2722:29;;;;;;;;;;;:38;;;;;;;;;;;;2713:63;;2761:14;2713:8;:63::i;:::-;2697:79;;2814:4;;;;;;;;;;;2795:23;;:18;2805:7;2795:5;:9;;:18;;;;:::i;:::-;:23;;;;;;;;2787:31;;2845:1;2836:5;:10;;2828:19;;;;;;;;2878:5;2865:9;:18;;2857:27;;;;;;;;2895:32;2906:10;2918:8;2895:10;:32::i;:::-;3035:19;:29;3055:8;3035:29;;;;;;;;;;;;3028:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113;3121:27;3140:7;3121:14;:18;;:27;;;;:::i;:::-;3113:3;:7;;:36;;;;:::i;:::-;3075:25;:35;3101:8;3075:35;;;;;;;;;;;:74;;;;3196:3;3159:24;:34;3184:8;3159:34;;;;;;;;;;;:40;;;;3255:5;3209:25;:35;3235:8;3209:35;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;3277:44;3288:8;3297:3;:10;;;;;;;;;;;;3308:3;:12;;;;;;;;;;;;3277:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:876;;;;:::o;138:32:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4010:227:7:-;4094:17;4135:21;:32;4157:9;4135:32;;;;;;;;;;;:48;4168:14;4135:48;;;;;;;;;;;:61;;;;;;;;;;;;4123:73;;;;4213:9;4206:16;;4010:227;;;;:::o;3961:123:6:-;4021:7;4047:20;:30;4068:8;4047:30;;;;;;;;;;;;;;;;;;;;;4040:37;;3961:123;;;:::o;3087:408::-;3165:13;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;3181:17:6;3189:8;3181:7;:17::i;:::-;3165:33;;3223:5;3216:12;;:3;:12;;;;3208:21;;;;;;;;3261:5;3247:19;;:10;:19;;;:58;;;;3270:35;3287:5;3294:10;3270:16;:35::i;:::-;3247:58;3239:67;;;;;;;;3354:1;3321:35;;:21;3333:8;3321:11;:21::i;:::-;:35;;;;:56;;;;3375:1;3360:17;;:3;:17;;;;3321:56;3317:172;;;3426:3;3393:20;:30;3414:8;3393:30;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3469:8;3464:3;3448:30;;3457:5;3448:30;;;;;;;;;;;;3317:172;3087:408;;;:::o;100:25:2:-;;;;;;;;;;;;;:::o;736:93:6:-;780:7;806:9;:16;;;;799:23;;736:93;:::o;908:442:7:-;1093:18;;:::i;:::-;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;743:10;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;1002:34:7;1016:10;1027:8;1002:13;:34::i;:::-;1046:36;1062:10;1073:8;1046:15;:36::i;:::-;1114:123;;;;;;;;;1144:10;1114:123;;;;;;1185:9;1114:123;;;;;;1223:3;1114:123;;;1093:144;;1280:3;1248:19;:29;1268:8;1248:29;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1299:44;1311:8;1321:10;1333:9;1299:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:442;;;:::o;162:25:2:-;;;;;;;;;;;;;:::o;2455:354:6:-;2540:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2599:1:6;2582:19;;:5;:19;;;;2574:28;;;;;;;;2635:1;2620:17;;:3;:17;;;;2612:26;;;;;;;;2649:30;2663:5;2670:8;2649:13;:30::i;:::-;2689:32;2705:5;2712:8;2689:15;:32::i;:::-;2731:25;2742:3;2747:8;2731:10;:25::i;:::-;2793:8;2788:3;2772:30;;2781:5;2772:30;;;;;;;;;;;;2455:354;;;;:::o;1402:92:4:-;601:10:2;;;;;;;;;;;587:24;;:10;:24;;;579:33;;;;;;;;1454:10:4;;;;;;;;;;;:19;;:33;1474:4;:12;;;1454:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1454:33:4;1402:92::o;1209:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1294:1;1275:21;;:7;:21;;;;1267:30;;;;;;;;1321:7;1308:10;;:20;;;;;;;;;;;;;;;;;;1209:126;:::o;330:19:7:-;;;;;;;;;;;;;:::o;256:1032:5:-;600:19;;:::i;:::-;1060:16;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;622:427:5;;;;;;;;;658:7;622:427;;;;;;700:12;622:427;;;;;;747:12;622:427;;;;;;797:15;622:427;;;;;;850:15;622:427;;;;;;898:10;622:427;;;;;;932:8;622:427;;;;972:17;622:427;;;;1021:17;622:427;;;600:449;;1079:9;:16;;;;1060:35;;1105:9;1120:6;1105:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1105:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1139:31;1150:10;1161:8;1139:10;:31::i;:::-;1229:10;1217:8;:22;;1209:31;;;;;;;;1251:30;1261:8;1271:9;1251;:30::i;:::-;256:1032;;;;;;;;;;;;:::o;4437:187:6:-;4519:7;4555:17;4565:6;4555:9;:17::i;:::-;4546:6;:26;4538:35;;;;;;;;4590:11;:19;4602:6;4590:19;;;;;;;;;;;;;;;4610:6;4590:27;;;;;;;;;;;;;;;;;;4583:34;;4437:187;;;;:::o;4606:91:7:-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;4681:8:7;4666:4;;:24;;;;;;;;;;;;;;;;;;4606:91;:::o;2291:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1039:6;;;;;;;;;;;1031:15;;;;;;;;2405:5;2396:6;;:14;;;;;;;;;;;;;;;;;;2291:126::o;1650:174:6:-;1741:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;1775:42:6;1792:5;1799:3;1804:8;1775:42;;;;;;;;;;;;;:16;:42::i;:::-;1650:174;;;;:::o;1480:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1565:1;1546:21;;:7;:21;;;;1538:30;;;;;;;;1592:7;1579:10;;:20;;;;;;;;;;;;;;;;;;1480:126;:::o;1317:157:6:-;1372:4;1388:13;1404:17;:27;1422:8;1404:27;;;;;;;;;;;;;;;;;;;;;1388:43;;1465:1;1448:19;;:5;:19;;;;1441:26;;1317:157;;;;:::o;4730:203::-;4789:4;4794;4827:13;:11;:13::i;:::-;4818:6;:22;4810:31;;;;;;;;4864:9;4874:6;4864:17;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4859:30;;4895:9;4905:6;4895:17;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4890:35;;4851:75;;;;4730:203;;;:::o;294:26:2:-;;;;;;;;;;;;;:::o;3398:380:7:-;3478:13;3512:16;3599:17;3699:14;3531:21;:32;3553:9;3531:32;;;;;;;;;;;:48;3564:14;3531:48;;;;;;;;;;;:57;;;;;;;;;;;;3512:76;;3619:21;:32;3641:9;3619:32;;;;;;;;;;;:48;3652:14;3619:48;;;;;;;;;;;:61;;;;;;;;;;;;3599:81;;3724:23;3737:9;3724:23;;:8;:12;;;;:23;;;;:::i;:::-;3699:49;;3765:6;3758:13;;3398:380;;;;;;;:::o;582:60::-;;;;;;;;;;;;;;;;;:::o;1404:519:5:-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;1517:6:5;1486:37;;:17;:27;1504:8;1486:27;;;;;;;;;;;;;;;;;;;;;:37;;;1478:46;;;;;;;;1580:1;1538:44;;:20;:30;1559:8;1538:30;;;;;;;;;;;;;;;;;;;;;:44;;;;1534:175;;;1639:1;1598:20;:30;1619:8;1598:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1689:8;1685:1;1660:38;;1669:6;1660:38;;;;;;;;;;;;1534:175;1745:31;1774:1;1745:16;:24;1762:6;1745:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;1718:16;:24;1735:6;1718:24;;;;;;;;;;;;;;;:58;;;;1824:1;1786:17;:27;1804:8;1786:27;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1870:8;1866:1;1841:38;;1850:6;1841:38;;;;;;;;;;;;1897:9;1907:8;1897:19;;;;;;;;;;;;;;;;;;;;;1890:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;1404:519;;:::o;2683:70:3:-;2741:12;2683:70;;;:::o;1103:161:6:-;1159:13;1192:17;:27;1210:8;1192:27;;;;;;;;;;;;;;;;;;;;;1184:35;;1254:1;1237:19;;:5;:19;;;;1229:28;;;;;;;;1103:161;;;:::o;892:158::-;948:13;999:1;981:20;;:6;:20;;;;973:29;;;;;;;;1019:16;:24;1036:6;1019:24;;;;;;;;;;;;;;;;1012:31;;892:158;;;:::o;2030:76:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;898:6;;;;;;;;;;;897:7;889:16;;;;;;;;2095:4;2086:6;;:13;;;;;;;;;;;;;;;;;;2030:76::o;5138:252:7:-;5197:7;5205;5213;5232:19;5254;:29;5274:8;5254:29;;;;;;;;;;;5232:51;;5315:3;:10;;;;;;;;;;;;5339:3;:12;;;;;;;;;;;;5365:3;:16;;;5294:89;;;;;;;;;;;5138:252;;;;;;:::o;649:61::-;;;;;;;;;;;;;;;;;;;;;;:::o;1356:1090::-;1461:13;1493:8;1546:19;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;1477:1:7;1461:17;;1504:1;1493:12;;1489:951;1510:9;:16;1506:1;:20;;;1489:951;;;1568:19;:33;1588:9;1598:1;1588:12;;;;;;;;;;;;;;;;;;;;1568:33;;;;;;;;;;;1546:55;;1676:1;1624:54;;:19;:33;1644:9;1654:1;1644:12;;;;;;;;;;;;;;;;;;;;1624:33;;;;;;;;;;;:40;;;;;;;;;;;;:54;;;;1616:63;;;;;;;;1702:100;1797:4;;;;;;;;;;;1712:89;;:84;1788:7;1712:71;1721:19;:33;1741:9;1751:1;1741:12;;;;;;;;;;;;;;;;;;;;1721:33;;;;;;;;;;;:42;;;;;;;;;;;;1712:71;;1764:15;1780:1;1764:18;;;;;;;;;;;;;;;;;;;;1712:8;:71::i;:::-;:75;;:84;;;;:::i;:::-;:89;;;;;;;;1702:5;:9;;:100;;;;:::i;:::-;1694:108;;1900:1;1825:71;1834:19;:33;1854:9;1864:1;1854:12;;;;;;;;;;;;;;;;;;;;1834:33;;;;;;;;;;;:42;;;;;;;;;;;;1825:71;;1877:15;1893:1;1877:18;;;;;;;;;;;;;;;;;;;;1825:8;:71::i;:::-;:76;;1817:85;;;;;;;;1945:5;1932:9;:18;;1924:27;;;;;;;;1978:36;1989:10;2001:9;2011:1;2001:12;;;;;;;;;;;;;;;;;;;;1978:10;:36::i;:::-;2090:19;:33;2110:9;2120:1;2110:12;;;;;;;;;;;;;;;;;;;;2090:33;;;;;;;;;;;;2083:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180;2188:31;2211:7;2188:15;2204:1;2188:18;;;;;;;;;;;;;;;;;;;;:22;;:31;;;;:::i;:::-;2180:3;:7;;:40;;;;:::i;:::-;2138:25;:39;2164:9;2174:1;2164:12;;;;;;;;;;;;;;;;;;;;2138:39;;;;;;;;;;;:82;;;;2275:3;2234:24;:38;2259:9;2269:1;2259:12;;;;;;;;;;;;;;;;;;;;2234:38;;;;;;;;;;;:44;;;;2342:5;2292:25;:39;2318:9;2328:1;2318:12;;;;;;;;;;;;;;;;;;;;2292:39;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;2381:48;2392:9;2402:1;2392:12;;;;;;;;;;;;;;;;;;;;2405:3;:10;;;;;;;;;;;;2416:3;:12;;;;;;;;;;;;2381:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:3;;;;;;;1489:951;;;1356:1090;;;;;:::o;4766:301::-;4838:19;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;4860:19:7;:29;4880:8;4860:29;;;;;;;;;;;4838:51;;4921:3;:10;;;;;;;;;;;;4907:24;;:10;:24;;;4899:33;;;;;;;;4950:19;:29;4970:8;4950:29;;;;;;;;;;;;4943:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4989:32;5000:10;5012:8;4989:10;:32::i;:::-;5037:23;5051:8;5037:23;;;;;;;;;;;;;;;;;;4766:301;;:::o;176:29:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3663:233::-;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;3765:10:6;3758:17;;:3;:17;;;;3750:26;;;;;;;;3823:9;3786:17;:29;3804:10;3786:29;;;;;;;;;;;;;;;:34;3816:3;3786:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;3874:3;3847:42;;3862:10;3847:42;;;3879:9;3847:42;;;;;;;;;;;;;;;;;;;;;;3663:233;;:::o;3784:220:7:-;3867:16;3906:21;:32;3928:9;3906:32;;;;;;;;;;;:48;3939:14;3906:48;;;;;;;;;;;:57;;;;;;;;;;;;3895:68;;;;3981:8;3974:15;;3784:220;;;;:::o;1901:251:6:-;2005:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2039:34:6;2052:5;2059:3;2064:8;2039:12;:34::i;:::-;2091:53;2116:5;2123:3;2128:8;2138:5;2091:24;:53::i;:::-;2083:62;;;;;;;;1901:251;;;;;:::o;448:55:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4305:295::-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;4481:112:7;;;;;;;;;4522:9;4481:112;;;;;;4568:13;4481:112;;;;;4430:21;:32;4452:9;4430:32;;;;;;;;;;;:48;4463:14;4430:48;;;;;;;;;;;:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4305:295;;;;:::o;510:61::-;;;;;;;;;;;;;;;;;:::o;454:848:4:-;530:14;556:19;587;618:22;652;686:17;715:14;741:23;776;816:17;836:9;846:8;836:19;;;;;;;;;;;;;;;;;;;;816:39;;883:3;:10;;;;;;;;;;;;875:19;;866:28;;926:3;:15;;;;;;;;;;;;918:24;;904:38;;974:3;:15;;;;;;;;;;;;966:24;;952:38;;1025:3;:18;;;;;;;;;;;;1017:27;;1000:44;;1079:3;:18;;;;;;;;;;;;1071:27;;1054:44;;1128:3;:13;;;;;;;;;;;;1120:22;;1108:34;;1162:3;:11;;1152:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:3;:20;;1183:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:3;:20;;1240:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:848;;;;;;;;;;;;:::o;4164:148:6:-;4246:4;4269:17;:25;4287:6;4269:25;;;;;;;;;;;;;;;:36;4295:9;4269:36;;;;;;;;;;;;;;;;;;;;;;;;;4262:43;;4164:148;;;;:::o;1751:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1836:1;1817:21;;:7;:21;;;;1809:30;;;;;;;;1863:7;1850:10;;:20;;;;;;;;;;;;;;;;;;1751:126;:::o;203:173:9:-;261:7;316:9;285:1;280;:6;276:35;;;303:1;296:8;;;;276:35;332:1;328;:5;316:17;;355:1;350;346;:5;;;;;;;;:10;339:18;;;;;;370:1;363:8;;203:173;;;;;;:::o;5078:232:6:-;5195:1;5156:41;;:17;:27;5174:8;5156:27;;;;;;;;;;;;;;;;;;;;;:41;;;5148:50;;;;;;;;5238:3;5208:17;:27;5226:8;5208:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;5275:28;5301:1;5275:16;:21;5292:3;5275:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;5251:16;:21;5268:3;5251:21;;;;;;;;;;;;;;;:52;;;;5078:232;;:::o;1007:129:9:-;1065:7;1080:9;1096:1;1092;:5;1080:17;;1115:1;1110;:6;;1103:14;;;;;;1130:1;1123:8;;1007:129;;;;;:::o;5785:303:6:-;5890:6;5869:27;;:17;5877:8;5869:7;:17::i;:::-;:27;;;5861:36;;;;;;;;5953:1;5911:44;;:20;:30;5932:8;5911:30;;;;;;;;;;;;;;;;;;;;;:44;;;;5907:175;;;6012:1;5971:20;:30;5992:8;5971:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;6062:8;6058:1;6033:38;;6042:6;6033:38;;;;;;;;;;;;5907:175;5785:303;;:::o;5433:235::-;5539:5;5518:26;;:17;5526:8;5518:7;:17::i;:::-;:26;;;5510:35;;;;;;;;5581:30;5609:1;5581:16;:23;5598:5;5581:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;5555:16;:23;5572:5;5555:23;;;;;;;;;;;;;;;:56;;;;5659:1;5621:17;:27;5639:8;5621:27;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;5433:235;;:::o;6177:250::-;6263:4;6279:13;6295:17;6303:8;6295:7;:17::i;:::-;6279:33;;6341:5;6329:17;;:8;:17;;;:54;;;;6375:8;6350:33;;:21;6362:8;6350:11;:21::i;:::-;:33;;;6329:54;:91;;;;6387:33;6404:5;6411:8;6387:16;:33::i;:::-;6329:91;6322:98;;6177:250;;;;;:::o;835:110:9:-;893:7;920:1;915;:6;;908:14;;;;;;939:1;935;:5;928:12;;835:110;;;;:::o;2884:322:3:-;2995:4;3079:13;3016:16;:3;:14;;;:16::i;:::-;3015:17;3011:59;;;3055:4;3048:11;;;;3011:59;3110:3;3095:36;;;3132:5;3139:8;3149:5;3095:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3095:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3095:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3095:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3095:60:3;;;;;;;;;;;;;;;;3079:76;;1483:10;3183:15;;3173:25;;;:6;:25;;;;3165:34;;2884:322;;;;;;;;:::o;451:150:8:-;508:4;520:12;569:4;557:17;549:25;;595:1;588:4;:8;581:15;;451:150;;;;:::o;56:1440:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\nimport \"./MineorityMint.sol\";\n\ncontract MineorityCore is MineorityMint {\n\n    //**Main contract with all admin stuff**//\n  \n    constructor() public {\n        // the creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n    }\n\n    function() external payable {\n        \n    }\n\n    //* Returns all information of a given token\n    // check return datatypes to be all 256 or what\n    // same with minting\n    function getToken(uint256 _tokenId) public view\n        returns (\n          uint256 asicID,\n          uint256 pciVendorID,\n          uint256 pciDeviceID,\n          uint256 pciSubDeviceID,\n          uint256 pciSubVendorID,\n          uint256 memSizeMB,\n          string memInfo,\n          string asicManufacturer,\n          string asicArchitecture\n    ) {\n        Token storage tok = allTokens[_tokenId];\n\n        asicID = uint256(tok.asicID);\n        pciVendorID = uint256(tok.pciVendorID);\n        pciDeviceID = uint256(tok.pciDeviceID);\n        pciSubDeviceID = uint256(tok.pciSubDeviceID);\n        pciSubVendorID = uint256(tok.pciSubVendorID);\n        memSizeMB = uint256(tok.memSizeMB);\n        memInfo = tok.memInfo;\n        asicManufacturer = string(tok.asicManufacturer);\n        asicArchitecture = string(tok.asicArchitecture);        \n    }\n\n    //* Withdraw all contract balance to CFO address\n    // Requires sender to be CFO address\n    function withdrawFunds() external onlyCFO {\n        cfoAddress.transfer(this.balance);\n    }\n}\n",
  "sourcePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
  "ast": {
    "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
    "exportedSymbols": {
      "MineorityCore": [
        532
      ]
    },
    "id": 533,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 411,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityMint.sol",
        "file": "./MineorityMint.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 694,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 413,
              "name": "MineorityMint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 693,
              "src": "82:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MineorityMint_$693",
                "typeString": "contract MineorityMint"
              }
            },
            "id": 414,
            "nodeType": "InheritanceSpecifier",
            "src": "82:13:4"
          }
        ],
        "contractDependencies": [
          129,
          292,
          409,
          693,
          1243,
          1798
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 532,
        "linearizedBaseContracts": [
          532,
          693,
          1798,
          1243,
          129,
          409,
          292
        ],
        "name": "MineorityCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "174:98:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 417,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "242:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3629,
                        "src": "255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "242:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 423,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:4"
            },
            "scope": 532,
            "src": "153:119:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "306:16:4",
              "statements": []
            },
            "documentation": null,
            "id": 427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:4"
            },
            "scope": 532,
            "src": "278:44:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "806:496:4",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "tok",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "816:17:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                        "typeString": "struct MineorityBase.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 328,
                        "src": "816:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                          "typeString": "struct MineorityBase.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "836:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$328_storage_$dyn_storage",
                        "typeString": "struct MineorityBase.Token storage ref[] storage ref"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "846:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "836:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$328_storage",
                      "typeString": "struct MineorityBase.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "816:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "asicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "866:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "883:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 311,
                          "src": "883:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "875:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "875:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "866:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "866:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 463,
                      "name": "pciVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "904:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "926:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "926:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "918:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "918:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "904:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "904:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "pciDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "952:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "974:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 315,
                          "src": "974:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "966:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "952:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "952:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "pciSubDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1000:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1025:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 317,
                          "src": "1025:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1017:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1017:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1000:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 484,
                      "name": "pciSubVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1054:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1079:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "1079:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1071:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1071:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1054:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "memSizeMB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "1108:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1128:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "memSizeMB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "1128:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1120:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1120:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1108:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "memInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "1152:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "tok",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "1162:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                          "typeString": "struct MineorityBase.Token storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "memInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 323,
                      "src": "1162:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1152:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "asicManufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1183:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1209:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicManufacturer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "1209:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1202:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": "string"
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1202:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1183:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:47:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "asicArchitecture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "1240:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1266:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicArchitecture",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 327,
                          "src": "1266:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1259:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": "string"
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1240:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:47:4"
                }
              ]
            },
            "documentation": null,
            "id": 518,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "472:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "name": "asicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "530:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "name": "pciVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "556:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "name": "pciDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "587:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "pciSubDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "618:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "name": "pciSubVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "652:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "name": "memSizeMB",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "686:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "name": "memInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "715:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "asicManufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "741:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "asicArchitecture",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "776:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:287:4"
            },
            "scope": 532,
            "src": "454:848:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "1444:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 526,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3660,
                          "src": "1474:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MineorityCore_$532",
                            "typeString": "contract MineorityCore"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1474:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "cfoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1454:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1454:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:33:4"
                }
              ]
            },
            "documentation": null,
            "id": 531,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1436:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1436:7:4"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:4"
            },
            "scope": 532,
            "src": "1402:92:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 533,
        "src": "56:1440:4"
      }
    ],
    "src": "0:1497:4"
  },
  "legacyAST": {
    "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
    "exportedSymbols": {
      "MineorityCore": [
        532
      ]
    },
    "id": 533,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 411,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityMint.sol",
        "file": "./MineorityMint.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 694,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 413,
              "name": "MineorityMint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 693,
              "src": "82:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MineorityMint_$693",
                "typeString": "contract MineorityMint"
              }
            },
            "id": 414,
            "nodeType": "InheritanceSpecifier",
            "src": "82:13:4"
          }
        ],
        "contractDependencies": [
          129,
          292,
          409,
          693,
          1243,
          1798
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 532,
        "linearizedBaseContracts": [
          532,
          693,
          1798,
          1243,
          129,
          409,
          292
        ],
        "name": "MineorityCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "174:98:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 417,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "242:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3629,
                        "src": "255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "242:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 423,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:4"
            },
            "scope": 532,
            "src": "153:119:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "306:16:4",
              "statements": []
            },
            "documentation": null,
            "id": 427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:4"
            },
            "scope": 532,
            "src": "278:44:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "806:496:4",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "tok",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "816:17:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                        "typeString": "struct MineorityBase.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 328,
                        "src": "816:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                          "typeString": "struct MineorityBase.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "836:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$328_storage_$dyn_storage",
                        "typeString": "struct MineorityBase.Token storage ref[] storage ref"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "846:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "836:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$328_storage",
                      "typeString": "struct MineorityBase.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "816:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "asicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "866:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "883:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 311,
                          "src": "883:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "875:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "875:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "866:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "866:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 463,
                      "name": "pciVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "904:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "926:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 313,
                          "src": "926:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "918:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "918:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "904:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "904:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "pciDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "952:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "974:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 315,
                          "src": "974:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "966:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "966:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "952:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "952:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "pciSubDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1000:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1025:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 317,
                          "src": "1025:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1017:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1017:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1000:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 484,
                      "name": "pciSubVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1054:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1079:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "1079:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1071:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1071:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1054:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "memSizeMB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "1108:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1128:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "memSizeMB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "1128:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1120:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1120:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1108:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "memInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "1152:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "tok",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "1162:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                          "typeString": "struct MineorityBase.Token storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "memInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 323,
                      "src": "1162:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1152:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "asicManufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1183:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1209:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicManufacturer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "1209:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1202:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": "string"
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1202:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1183:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:47:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "asicArchitecture",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "1240:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1266:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$328_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicArchitecture",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 327,
                          "src": "1266:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1259:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": "string"
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1240:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:47:4"
                }
              ]
            },
            "documentation": null,
            "id": 518,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "472:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "name": "asicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "530:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "name": "pciVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "556:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "name": "pciDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "587:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "pciSubDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "618:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "name": "pciSubVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "652:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "name": "memSizeMB",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "686:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "name": "memInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "715:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "asicManufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "741:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "asicArchitecture",
                  "nodeType": "VariableDeclaration",
                  "scope": 518,
                  "src": "776:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:287:4"
            },
            "scope": 532,
            "src": "454:848:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "1444:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 526,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3660,
                          "src": "1474:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MineorityCore_$532",
                            "typeString": "contract MineorityCore"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1474:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "cfoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1454:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1454:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1454:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 529,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:33:4"
                }
              ]
            },
            "documentation": null,
            "id": 531,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1436:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1436:7:4"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:4"
            },
            "scope": 532,
            "src": "1402:92:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 533,
        "src": "56:1440:4"
      }
    ],
    "src": "0:1497:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xcb2395a792751ce36de8bc09cecf8278abbc429d",
      "transactionHash": "0x2e514c0057a01e38ebb13fb4936a41ee3b86969369a7c1c2d21a71cc9b060379"
    },
    "4447": {
      "events": {},
      "links": {},
      "address": "0x059e17ceb15ef8470b7184b858d356317518aab3",
      "transactionHash": "0x9065054be8b0a88d89f73852c8ff04498049cff029c82fe5742ca59923e596f9"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-06T13:05:24.332Z"
}
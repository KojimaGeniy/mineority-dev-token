{
  "contractName": "MineorityCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "buyToken",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getHostPrice",
      "outputs": [
        {
          "name": "hostPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_GPUClass",
          "type": "uint256"
        }
      ],
      "name": "sellToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ctoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToPurchaseDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "_burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceSignature_ERC721Optional",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSaleLot",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToPurchasePrice",
      "outputs": [
        {
          "name": "",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "name": "_hostingPeriods",
          "type": "uint256[]"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeSaleLot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_asicID",
          "type": "uint256"
        },
        {
          "name": "_pciVendorID",
          "type": "uint256"
        },
        {
          "name": "_pciDeviceID",
          "type": "uint256"
        },
        {
          "name": "_pciSubDeviceID",
          "type": "uint256"
        },
        {
          "name": "_pciSubVendorID",
          "type": "uint256"
        },
        {
          "name": "_memSizeMB",
          "type": "uint256"
        },
        {
          "name": "_memInfo",
          "type": "string"
        },
        {
          "name": "_GPUType",
          "type": "uint256"
        },
        {
          "name": "_GPUClass",
          "type": "uint256"
        }
      ],
      "name": "_mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        }
      ],
      "name": "getGPUPrice",
      "outputs": [
        {
          "name": "gpuPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToSaleLot",
      "outputs": [
        {
          "name": "seller",
          "type": "address"
        },
        {
          "name": "GPUClass",
          "type": "uint16"
        },
        {
          "name": "creationTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_GPUClass",
          "type": "uint256"
        },
        {
          "name": "_hostingPeriod",
          "type": "uint256"
        },
        {
          "name": "_GPUPrice",
          "type": "uint256"
        },
        {
          "name": "_hostingPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToHostingPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCTO",
          "type": "address"
        }
      ],
      "name": "setCTO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "GPUClass",
          "type": "uint256"
        }
      ],
      "name": "SaleCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "GPUClass",
          "type": "uint256"
        }
      ],
      "name": "SaleClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SaleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "name": "asicID",
          "type": "uint256"
        },
        {
          "name": "pciVendorID",
          "type": "uint256"
        },
        {
          "name": "pciDeviceID",
          "type": "uint256"
        },
        {
          "name": "pciSubDeviceID",
          "type": "uint256"
        },
        {
          "name": "pciSubVendorID",
          "type": "uint256"
        },
        {
          "name": "memSizeMB",
          "type": "uint256"
        },
        {
          "name": "memInfo",
          "type": "string"
        },
        {
          "name": "GPUType",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610225576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146102275780630519ce791461028b578063057466ea146102e257806306fdde031461030c57806307d608531461039c578063081812fc146103e7578063095ea7b3146104545780630a0f8168146104a157806318160ddd146104f85780631897bcf3146105235780631f5136601461055a57806323b872dd146105b157806324600fc31461061e57806327d7874c146106355780632c4e722e146106785780632f745c59146106c757806334fcf437146107285780633f4ba83a1461075557806342842e0e1461076c5780634e0a3379146107d95780634f558e791461081c5780634f6ccce7146108615780635c975abb146108a95780635cf4ee91146108d85780635f8a90f2146109235780636161eb1814610964578063624de3d9146109b15780636352211e14610a1a57806370a0823114610a875780638456cb5914610ade578063857d45f814610af557806385d87b2b14610b70578063942a846714610bd55780639575e96214610c7157806395d89b4114610c9e578063a22cb46514610d2e578063a32a64f514610d7d578063a728111714610e36578063b88d4fde14610e81578063c054ab7514610f34578063d176dd4514610fb7578063de2e4f8f14611002578063e4b50cb814611043578063e985e9c51461111a578063fe1439b414611195575b005b34801561023357600080fd5b5061027160048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506111d8565b604051808215151515815260200191505060405180910390f35b34801561029757600080fd5b506102a061131b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61030a6004803603810190808035906020019092919080359060200190929190505050611341565b005b34801561031857600080fd5b50610321611635565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610361578082015181840152602081019050610346565b50505050905090810190601f16801561038e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a857600080fd5b506103d160048036038101908080359060200190929190803590602001909291905050506116d3565b6040518082815260200191505060405180910390f35b3480156103f357600080fd5b5061041260048036038101908080359060200190929190505050611736565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046057600080fd5b5061049f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611773565b005b3480156104ad57600080fd5b506104b661194b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050457600080fd5b5061050d611970565b6040518082815260200191505060405180910390f35b34801561052f57600080fd5b50610558600480360381019080803590602001909291908035906020019092919050505061197d565b005b34801561056657600080fd5b5061056f611b4c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105bd57600080fd5b5061061c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b72565b005b34801561062a57600080fd5b50610633611c9b565b005b34801561064157600080fd5b50610676600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d79565b005b34801561068457600080fd5b5061068d611e53565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106d357600080fd5b50610712600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e75565b6040518082815260200191505060405180910390f35b34801561073457600080fd5b5061075360048036038101908080359060200190929190505050611eec565b005b34801561076157600080fd5b5061076a611f84565b005b34801561077857600080fd5b506107d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612017565b005b3480156107e557600080fd5b5061081a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206b565b005b34801561082857600080fd5b5061084760048036038101908080359060200190929190505050612146565b604051808215151515815260200191505060405180910390f35b34801561086d57600080fd5b5061088c600480360381019080803590602001909291905050506121b8565b604051808381526020018281526020019250505060405180910390f35b3480156108b557600080fd5b506108be612261565b604051808215151515815260200191505060405180910390f35b3480156108e457600080fd5b5061090d6004803603810190808035906020019092919080359060200190929190505050612274565b6040518082815260200191505060405180910390f35b34801561092f57600080fd5b5061094e6004803603810190808035906020019092919050505061234b565b6040518082815260200191505060405180910390f35b34801561097057600080fd5b506109af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612363565b005b3480156109bd57600080fd5b506109c661246d565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b348015610a2657600080fd5b50610a45600480360381019080803590602001909291905050506124b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9357600080fd5b50610ac8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612529565b6040518082815260200191505060405180910390f35b348015610aea57600080fd5b50610af36125ad565b005b348015610b0157600080fd5b50610b2060048036038101908080359060200190929190505050612641565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b348015610b7c57600080fd5b50610b9b600480360381019080803590602001909291905050506126ae565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c6f60048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506126dd565b005b348015610c7d57600080fd5b50610c9c60048036038101908080359060200190929190505050612b96565b005b348015610caa57600080fd5b50610cb3612cc6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cf3578082015181840152602081019050610cd8565b50505050905090810190601f168015610d205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d3a57600080fd5b50610d7b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612d64565b005b348015610d8957600080fd5b50610e34600480360381019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190505050612ebc565b005b348015610e4257600080fd5b50610e6b600480360381019080803590602001909291908035906020019092919050505061313c565b6040518082815260200191505060405180910390f35b348015610e8d57600080fd5b50610f32600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061319f565b005b348015610f4057600080fd5b50610f5f600480360381019080803590602001909291905050506131fa565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff1661ffff168152602001828152602001935050505060405180910390f35b348015610fc357600080fd5b5061100060048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050613252565b005b34801561100e57600080fd5b5061102d60048036038101908080359060200190929190505050613392565b6040518082815260200191505060405180910390f35b34801561104f57600080fd5b5061106e600480360381019080803590602001909291905050506133aa565b6040518089815260200188815260200187815260200186815260200185815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156110d85780820151818401526020810190506110bd565b50505050905090810190601f1680156111055780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561112657600080fd5b5061117b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613553565b604051808215151515815260200191505060405180910390f35b3480156111a157600080fd5b506111d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135e7565b005b60006301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112a957506380ac58cd7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611314575063780e9d637c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260149054906101000a900460ff1615151561136057600080fd5b600d60008581526020019081526020016000209150600073ffffffffffffffffffffffffffffffffffffffff16600d600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156113e757600080fd5b611419600d600086815260200190815260200160002060000160149054906101000a900461ffff1661ffff1684612274565b9050600b60009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16611467670de0b6b3a7640000836136c290919063ffffffff16565b81151561147057fe5b0490506000811415151561148357600080fd5b80341015151561149257600080fd5b61149c33856136fd565b600d6000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549061ffff021916905560018201600090555050611509834261385790919063ffffffff16565b600e60008681526020019081526020016000208190555042600f600086815260200190815260200160002081905550806010600086815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507fbaff7966f0758b1794fcea83b6d60c741b6fe4ab1b2431d4353784f68551d156848360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460000160149054906101000a900461ffff16604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060405180910390a150505050565b60098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116cb5780601f106116a0576101008083540402835291602001916116cb565b820191906000526020600020905b8154815290600101906020018083116116ae57829003601f168201915b505050505081565b6000600c6000848152602001908152602001600020600083815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905080905092915050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260149054906101000a900460ff1615151561179157600080fd5b61179a826124b0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156117d757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181757506118168133613553565b5b151561182257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1661184383611736565b73ffffffffffffffffffffffffffffffffffffffff161415806118935750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561194657826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b611985613db2565b600260149054906101000a900460ff161515156119a157600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119fd57600080fd5b611a073384613875565b611a1133846139d4565b6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff16815260200142815250905080600d600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548161ffff021916908361ffff160217905550604082015181600101559050507fa29262303591d48ce94646a46b652916ce782073349bb5dc261ac4c5237d9397833384604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80611b7d3382613b03565b1515611b8857600080fd5b600260149054906101000a900460ff16151515611ba457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611be057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611c1c57600080fd5b611c268483613875565b611c3084836139d4565b611c3a83836136fd565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cf757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015611d76573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dd457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e1057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000611e8083612529565b82101515611e8d57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611ed957fe5b9060005260206000200154905092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f4857600080fd5b80600b60006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fdf57600080fd5b600260149054906101000a900460ff161515611ffa57600080fd5b6000600260146101000a81548160ff021916908315150217905550565b806120223382613b03565b151561202d57600080fd5b600260149054906101000a900460ff1615151561204957600080fd5b612065848484602060405190810160405280600081525061319f565b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120c657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561210257600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000806121c3611970565b831015156121d057600080fd5b6003838154811015156121df57fe5b906000526020600020906002020160010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660038481548110151561222e57fe5b9060005260206000209060020201600101601a9054906101000a900460ff16600281111561225857fe5b91509150915091565b600260149054906101000a900460ff1681565b600080600080600c6000878152602001908152602001600020600086815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff169250600c6000878152602001908152602001600020600086815260200190815260200160002060000160109054906101000a90046fffffffffffffffffffffffffffffffff16915061233d826fffffffffffffffffffffffffffffffff16846fffffffffffffffffffffffffffffffff1661385790919063ffffffff16565b905080935050505092915050565b600f6020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156123bf57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156123f957600080fd5b6124038282613875565b61240d82826139d4565b80600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffb0aa71877c01000000000000000000000000000000000000000000000000000000000281565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561252457600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561256657600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561260857600080fd5b600260149054906101000a900460ff1615151561262457600080fd5b6001600260146101000a81548160ff021916908315150217905550565b600080600080600d600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160149054906101000a900461ffff1682600101548161ffff169150935093509350509193909250565b60106020528060005260406000206000915054906101000a90046fffffffffffffffffffffffffffffffff1681565b6000806000600260149054906101000a900460ff161515156126fe57600080fd5b60009250600091505b84518261ffff161015612b8f57600d6000868461ffff1681518110151561272a57fe5b9060200190602002015181526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff16600d6000878561ffff1681518110151561277257fe5b90602001906020020151815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156127d157600080fd5b6128a0600b60009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16612887670de0b6b3a7640000612879600d60008b8961ffff1681518110151561282a57fe5b90602001906020020151815260200190815260200160002060000160149054906101000a900461ffff1661ffff16898861ffff1681518110151561286a57fe5b90602001906020020151612274565b6136c290919063ffffffff16565b81151561289057fe5b048461385790919063ffffffff16565b9250600061290c600d6000888661ffff168151811015156128bd57fe5b90602001906020020151815260200190815260200160002060000160149054906101000a900461ffff1661ffff16868561ffff168151811015156128fd57fe5b90602001906020020151612274565b1415151561291957600080fd5b82341015151561292857600080fd5b61294d33868461ffff1681518110151561293e57fe5b906020019060200201516136fd565b600d6000868461ffff1681518110151561296357fe5b906020019060200201518152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549061ffff0219169055600182016000905550506129f0848361ffff168151811015156129d757fe5b906020019060200201514261385790919063ffffffff16565b600e6000878561ffff16815181101515612a0657fe5b9060200190602002015181526020019081526020016000208190555042600f6000878561ffff16815181101515612a3957fe5b906020019060200201518152602001908152602001600020819055508260106000878561ffff16815181101515612a6c57fe5b90602001906020020151815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507fbaff7966f0758b1794fcea83b6d60c741b6fe4ab1b2431d4353784f68551d156858361ffff16815181101515612aed57fe5b906020019060200201518260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360000160149054906101000a900461ffff16604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060405180910390a18180600101925050612707565b5050505050565b6000600260149054906101000a900460ff16151515612bb457600080fd5b600d600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c2757600080fd5b600d6000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549061ffff021916905560018201600090555050612c8b33836136fd565b7f2c56893f6f6026d19bd17b7d05c9f15c522de1ae2b1c3a825f91a73c799321f2826040518082815260200191505060405180910390a15050565b600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d5c5780601f10612d3157610100808354040283529160200191612d5c565b820191906000526020600020905b815481529060010190602001808311612d3f57829003601f168201915b505050505081565b600260149054906101000a900460ff16151515612d8057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612dbb57600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b612ec4613dee565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612f2257600080fd5b610100604051908101604052808681526020018c6fffffffffffffffffffffffffffffffff1681526020018b61ffff1681526020018a61ffff1681526020018961ffff1681526020018861ffff1681526020018761ffff168152602001856002811115612f8b57fe5b6002811115612f9657fe5b81525091506003805490509050600382908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190612fed929190613e65565b5060208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160010160106101000a81548161ffff021916908361ffff16021790555060608201518160010160126101000a81548161ffff021916908361ffff16021790555060808201518160010160146101000a81548161ffff021916908361ffff16021790555060a08201518160010160166101000a81548161ffff021916908361ffff16021790555060c08201518160010160186101000a81548161ffff021916908361ffff16021790555060e082015181600101601a6101000a81548160ff0219169083600281111561310057fe5b021790555050505061311233826136fd565b63ffffffff811115151561312557600080fd5b61312f818461197d565b5050505050505050505050565b6000600c6000848152602001908152602001600020600083815260200190815260200160002060000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905080905092915050565b816131aa3382613b03565b15156131b557600080fd5b600260149054906101000a900460ff161515156131d157600080fd5b6131dc858585611b72565b6131e885858585613b98565b15156131f357600080fd5b5050505050565b600d6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900461ffff16908060010154905083565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156132ae57600080fd5b6040805190810160405280836fffffffffffffffffffffffffffffffff168152602001826fffffffffffffffffffffffffffffffff16815250600c6000868152602001908152602001600020600085815260200190815260200160002060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555090505050505050565b600e6020528060005260406000206000915090505481565b600080600080600080606060008060038a8154811015156133c757fe5b906000526020600020906002020190508060010160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1698508060010160109054906101000a900461ffff1661ffff1697508060010160129054906101000a900461ffff1661ffff1696508060010160149054906101000a900461ffff1661ffff1695508060010160169054906101000a900461ffff1661ffff1694508060010160189054906101000a900461ffff1661ffff169350806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135215780601f106134f657610100808354040283529160200191613521565b820191906000526020600020905b81548152906001019060200180831161350457829003601f168201915b5050505050925080600101601a9054906101000a900460ff16600281111561354557fe5b915050919395975091939597565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561364257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561367e57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008414156136d757600091506136f6565b82840290508284828115156136e857fe5b041415156136f257fe5b8091505b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561376b57600080fd5b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506138106001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461385790919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080828401905083811015151561386b57fe5b8091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16613895826124b0565b73ffffffffffffffffffffffffffffffffffffffff161415156138b757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156139d05760006005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b5050565b8173ffffffffffffffffffffffffffffffffffffffff166139f4826124b0565b73ffffffffffffffffffffffffffffffffffffffff16141515613a1657600080fd5b613a696001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054613d8690919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080613b0f836124b0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613b7e57508373ffffffffffffffffffffffffffffffffffffffff16613b6684611736565b73ffffffffffffffffffffffffffffffffffffffff16145b80613b8f5750613b8e8185613553565b5b91505092915050565b600080613bba8573ffffffffffffffffffffffffffffffffffffffff16613d9f565b1515613bc95760019150613d7d565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613c8b578082015181840152602081019050613c70565b50505050905090810190601f168015613cb85780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015613cd957600080fd5b505af1158015613ced573d6000803e3d6000fd5b505050506040513d6020811015613d0357600080fd5b8101908080519060200190929190505050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b6000828211151515613d9457fe5b818303905092915050565b600080823b905060008111915050919050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff168152602001600081525090565b610100604051908101604052806060815260200160006fffffffffffffffffffffffffffffffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff16815260200160006002811115613e5f57fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ea657805160ff1916838001178555613ed4565b82800160010185558215613ed4579182015b82811115613ed3578251825591602001919060010190613eb8565b5b509050613ee19190613ee5565b5090565b613f0791905b80821115613f03576000816000905550600101613eeb565b5090565b905600a165627a7a723058206d2494f8cd600fd061c542fe0874aa25aa33884f05cd70536c3e99c6802af4570029",
  "sourceMap": "56:1315:4:-;;;315:5:2;294:26;;;;;;;;;;;;;;;;;;;;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;176:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;153:119:4;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:119:4;255:10;242;;:23;;;;;;;;;;;;;;;;;;56:1315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "56:1315:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:278:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:278:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;131:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:863:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:32:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;138:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3984:227:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3984:227:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3961:123:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3961:123:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:408;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3087:408:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;736:93:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:93:6;;;;;;;;;;;;;;;;;;;;;;;908:442:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:442:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;162:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;162:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:354:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2455:354:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:92:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1277:92:4;;;;;;1209:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:19:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:19:7;;;;;;;;;;;;;;;;;;;;;;;;;;;4437:187:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4437:187:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4580:91:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4580:91:7;;;;;;;;;;;;;;;;;;;;;;;;;;2291:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2291:126:2;;;;;;1650:174:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1650:174:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:157:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1317:157:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4730:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4730:199:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:380:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3372:380:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:60;;8:9:-1;5:2;;;30:1;27;20:12;5:2;582:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:247:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1368:247:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:70:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2614:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:161:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1103:161:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;892:158:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2030:76:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2030:76:2;;;;;;5112:252:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5112:252:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:61:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:1077;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4740:301;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4740:301:7;;;;;;;;;;;;;;;;;;;;;;;;;;176:29:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;176:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3663:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3663:233:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:941:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:941:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:220:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3758:220:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:251:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1901:251:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:55:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4279:295;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4279:295:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:61:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:723:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:723:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:723:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4164:148:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4164:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:126:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1751:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;394:278:6;465:4;1802:10:3;510:25:6;;494:41;;;:12;:41;;;;493:102;;;;1929:10:3;569:25:6;;553:41;;;:12;:41;;;;493:102;:171;;;;2598:10:3;628:35:6;;612:51;;;:12;:51;;;;493:171;485:180;;394:278;;;:::o;131:25:2:-;;;;;;;;;;;;;:::o;2439:863:7:-;2537:19;2684:13;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2559:19:7;:29;2579:8;2559:29;;;;;;;;;;;2537:51;;2671:1;2623:50;;:19;:29;2643:8;2623:29;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;;2615:59;;;;;;;;2700:63;2709:19;:29;2729:8;2709:29;;;;;;;;;;;:38;;;;;;;;;;;;2700:63;;2748:14;2700:8;:63::i;:::-;2684:79;;2801:4;;;;;;;;;;;2782:23;;:18;2792:7;2782:5;:9;;:18;;;;:::i;:::-;:23;;;;;;;;2774:31;;2832:1;2823:5;:10;;2815:19;;;;;;;;2865:5;2852:9;:18;;2844:27;;;;;;;;2882:32;2893:10;2905:8;2882:10;:32::i;:::-;3022:19;:29;3042:8;3022:29;;;;;;;;;;;;3015:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3100:23;3108:14;3100:3;:7;;:23;;;;:::i;:::-;3062:25;:35;3088:8;3062:35;;;;;;;;;;;:61;;;;3170:3;3133:24;:34;3158:8;3133:34;;;;;;;;;;;:40;;;;3229:5;3183:25;:35;3209:8;3183:35;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;3251:44;3262:8;3271:3;:10;;;;;;;;;;;;3282:3;:12;;;;;;;;;;;;3251:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:863;;;;:::o;138:32:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3984:227:7:-;4068:17;4109:21;:32;4131:9;4109:32;;;;;;;;;;;:48;4142:14;4109:48;;;;;;;;;;;:61;;;;;;;;;;;;4097:73;;;;4187:9;4180:16;;3984:227;;;;:::o;3961:123:6:-;4021:7;4047:20;:30;4068:8;4047:30;;;;;;;;;;;;;;;;;;;;;4040:37;;3961:123;;;:::o;3087:408::-;3165:13;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;3181:17:6;3189:8;3181:7;:17::i;:::-;3165:33;;3223:5;3216:12;;:3;:12;;;;3208:21;;;;;;;;3261:5;3247:19;;:10;:19;;;:58;;;;3270:35;3287:5;3294:10;3270:16;:35::i;:::-;3247:58;3239:67;;;;;;;;3354:1;3321:35;;:21;3333:8;3321:11;:21::i;:::-;:35;;;;:56;;;;3375:1;3360:17;;:3;:17;;;;3321:56;3317:172;;;3426:3;3393:20;:30;3414:8;3393:30;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3469:8;3464:3;3448:30;;3457:5;3448:30;;;;;;;;;;;;3317:172;3087:408;;;:::o;100:25:2:-;;;;;;;;;;;;;:::o;736:93:6:-;780:7;806:9;:16;;;;799:23;;736:93;:::o;908:442:7:-;1093:18;;:::i;:::-;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;743:10;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;1002:34:7;1016:10;1027:8;1002:13;:34::i;:::-;1046:36;1062:10;1073:8;1046:15;:36::i;:::-;1114:123;;;;;;;;;1144:10;1114:123;;;;;;1185:9;1114:123;;;;;;1223:3;1114:123;;;1093:144;;1280:3;1248:19;:29;1268:8;1248:29;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1299:44;1311:8;1321:10;1333:9;1299:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:442;;;:::o;162:25:2:-;;;;;;;;;;;;;:::o;2455:354:6:-;2540:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2599:1:6;2582:19;;:5;:19;;;;2574:28;;;;;;;;2635:1;2620:17;;:3;:17;;;;2612:26;;;;;;;;2649:30;2663:5;2670:8;2649:13;:30::i;:::-;2689:32;2705:5;2712:8;2689:15;:32::i;:::-;2731:25;2742:3;2747:8;2731:10;:25::i;:::-;2793:8;2788:3;2772:30;;2781:5;2772:30;;;;;;;;;;;;2455:354;;;;:::o;1277:92:4:-;601:10:2;;;;;;;;;;;587:24;;:10;:24;;;579:33;;;;;;;;1329:10:4;;;;;;;;;;;:19;;:33;1349:4;:12;;;1329:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1329:33:4;1277:92::o;1209:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1294:1;1275:21;;:7;:21;;;;1267:30;;;;;;;;1321:7;1308:10;;:20;;;;;;;;;;;;;;;;;;1209:126;:::o;330:19:7:-;;;;;;;;;;;;;:::o;4437:187:6:-;4519:7;4555:17;4565:6;4555:9;:17::i;:::-;4546:6;:26;4538:35;;;;;;;;4590:11;:19;4602:6;4590:19;;;;;;;;;;;;;;;4610:6;4590:27;;;;;;;;;;;;;;;;;;4583:34;;4437:187;;;;:::o;4580:91:7:-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;4655:8:7;4640:4;;:24;;;;;;;;;;;;;;;;;;4580:91;:::o;2291:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1039:6;;;;;;;;;;;1031:15;;;;;;;;2405:5;2396:6;;:14;;;;;;;;;;;;;;;;;;2291:126::o;1650:174:6:-;1741:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;1775:42:6;1792:5;1799:3;1804:8;1775:42;;;;;;;;;;;;;:16;:42::i;:::-;1650:174;;;;:::o;1480:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1565:1;1546:21;;:7;:21;;;;1538:30;;;;;;;;1592:7;1579:10;;:20;;;;;;;;;;;;;;;;;;1480:126;:::o;1317:157:6:-;1372:4;1388:13;1404:17;:27;1422:8;1404:27;;;;;;;;;;;;;;;;;;;;;1388:43;;1465:1;1448:19;;:5;:19;;;;1441:26;;1317:157;;;;:::o;4730:199::-;4789:4;4794;4827:13;:11;:13::i;:::-;4818:6;:22;4810:31;;;;;;;;4864:9;4874:6;4864:17;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4859:30;;4895:9;4905:6;4895:17;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;4890:31;;;;;;;;4851:71;;;;4730:199;;;:::o;294:26:2:-;;;;;;;;;;;;;:::o;3372:380:7:-;3452:13;3486:16;3573:17;3673:14;3505:21;:32;3527:9;3505:32;;;;;;;;;;;:48;3538:14;3505:48;;;;;;;;;;;:57;;;;;;;;;;;;3486:76;;3593:21;:32;3615:9;3593:32;;;;;;;;;;;:48;3626:14;3593:48;;;;;;;;;;;:61;;;;;;;;;;;;3573:81;;3698:23;3711:9;3698:23;;:8;:12;;;;:23;;;;:::i;:::-;3673:49;;3739:6;3732:13;;3372:380;;;;;;;:::o;582:60::-;;;;;;;;;;;;;;;;;:::o;1368:247:5:-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;1464:6:5;1450:20;;:10;:20;;;1442:29;;;;;;;;1481:31;1495:6;1503:8;1481:13;:31::i;:::-;1522:33;1538:6;1546:8;1522:15;:33::i;:::-;1599:8;1595:1;1570:38;;1579:6;1570:38;;;;;;;;;;;;1368:247;;:::o;2614:70:3:-;2672:12;2614:70;;;:::o;1103:161:6:-;1159:13;1192:17;:27;1210:8;1192:27;;;;;;;;;;;;;;;;;;;;;1184:35;;1254:1;1237:19;;:5;:19;;;;1229:28;;;;;;;;1103:161;;;:::o;892:158::-;948:13;999:1;981:20;;:6;:20;;;;973:29;;;;;;;;1019:16;:24;1036:6;1019:24;;;;;;;;;;;;;;;;1012:31;;892:158;;;:::o;2030:76:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;898:6;;;;;;;;;;;897:7;889:16;;;;;;;;2095:4;2086:6;;:13;;;;;;;;;;;;;;;;;;2030:76::o;5112:252:7:-;5171:7;5179;5187;5206:19;5228;:29;5248:8;5228:29;;;;;;;;;;;5206:51;;5289:3;:10;;;;;;;;;;;;5313:3;:12;;;;;;;;;;;;5339:3;:16;;;5268:89;;;;;;;;;;;5112:252;;;;;;:::o;649:61::-;;;;;;;;;;;;;;;;;;;;;;:::o;1356:1077::-;1461:13;1493:8;1546:19;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;1477:1:7;1461:17;;1504:1;1493:12;;1489:938;1510:9;:16;1506:1;:20;;;1489:938;;;1568:19;:33;1588:9;1598:1;1588:12;;;;;;;;;;;;;;;;;;;;1568:33;;;;;;;;;;;1546:55;;1676:1;1624:54;;:19;:33;1644:9;1654:1;1644:12;;;;;;;;;;;;;;;;;;;;1624:33;;;;;;;;;;;:40;;;;;;;;;;;;:54;;;;1616:63;;;;;;;;1702:100;1797:4;;;;;;;;;;;1712:89;;:84;1788:7;1712:71;1721:19;:33;1741:9;1751:1;1741:12;;;;;;;;;;;;;;;;;;;;1721:33;;;;;;;;;;;:42;;;;;;;;;;;;1712:71;;1764:15;1780:1;1764:18;;;;;;;;;;;;;;;;;;;;1712:8;:71::i;:::-;:75;;:84;;;;:::i;:::-;:89;;;;;;;;1702:5;:9;;:100;;;;:::i;:::-;1694:108;;1900:1;1825:71;1834:19;:33;1854:9;1864:1;1854:12;;;;;;;;;;;;;;;;;;;;1834:33;;;;;;;;;;;:42;;;;;;;;;;;;1825:71;;1877:15;1893:1;1877:18;;;;;;;;;;;;;;;;;;;;1825:8;:71::i;:::-;:76;;1817:85;;;;;;;;1945:5;1932:9;:18;;1924:27;;;;;;;;1978:36;1989:10;2001:9;2011:1;2001:12;;;;;;;;;;;;;;;;;;;;1978:10;:36::i;:::-;2090:19;:33;2110:9;2120:1;2110:12;;;;;;;;;;;;;;;;;;;;2090:33;;;;;;;;;;;;2083:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:27;2188:15;2204:1;2188:18;;;;;;;;;;;;;;;;;;;;2180:3;:7;;:27;;;;:::i;:::-;2138:25;:39;2164:9;2174:1;2164:12;;;;;;;;;;;;;;;;;;;;2138:39;;;;;;;;;;;:69;;;;2262:3;2221:24;:38;2246:9;2256:1;2246:12;;;;;;;;;;;;;;;;;;;;2221:38;;;;;;;;;;;:44;;;;2329:5;2279:25;:39;2305:9;2315:1;2305:12;;;;;;;;;;;;;;;;;;;;2279:39;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;2368:48;2379:9;2389:1;2379:12;;;;;;;;;;;;;;;;;;;;2392:3;:10;;;;;;;;;;;;2403:3;:12;;;;;;;;;;;;2368:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:3;;;;;;;1489:938;;;1356:1077;;;;;:::o;4740:301::-;4812:19;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;4834:19:7;:29;4854:8;4834:29;;;;;;;;;;;4812:51;;4895:3;:10;;;;;;;;;;;;4881:24;;:10;:24;;;4873:33;;;;;;;;4924:19;:29;4944:8;4924:29;;;;;;;;;;;;4917:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:32;4974:10;4986:8;4963:10;:32::i;:::-;5011:23;5025:8;5011:23;;;;;;;;;;;;;;;;;;4740:301;;:::o;176:29:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3663:233::-;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;3765:10:6;3758:17;;:3;:17;;;;3750:26;;;;;;;;3823:9;3786:17;:29;3804:10;3786:29;;;;;;;;;;;;;;;:34;3816:3;3786:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;3874:3;3847:42;;3862:10;3847:42;;;3879:9;3847:42;;;;;;;;;;;;;;;;;;;;;;3663:233;;:::o;311:941:5:-;613:19;;:::i;:::-;1024:16;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;635:378:5;;;;;;;;;945:8;635:378;;;;671:7;635:378;;;;;;713:12;635:378;;;;;;760:12;635:378;;;;;;810:15;635:378;;;;;;863:15;635:378;;;;;;911:10;635:378;;;;;;993:8;976:26;;;;;;;;635:378;;;;;;;;;;;613:400;;1043:9;:16;;;;1024:35;;1069:9;1084:6;1069:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1069:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:31;1114:10;1125:8;1103:10;:31::i;:::-;1193:10;1181:8;:22;;1173:31;;;;;;;;1215:30;1225:8;1235:9;1215;:30::i;:::-;311:941;;;;;;;;;;;:::o;3758:220:7:-;3841:16;3880:21;:32;3902:9;3880:32;;;;;;;;;;;:48;3913:14;3880:48;;;;;;;;;;;:57;;;;;;;;;;;;3869:68;;;;3955:8;3948:15;;3758:220;;;;:::o;1901:251:6:-;2005:8;294:39;312:10;324:8;294:17;:39::i;:::-;286:48;;;;;;;;898:6:2;;;;;;;;;;;897:7;889:16;;;;;;;;2039:34:6;2052:5;2059:3;2064:8;2039:12;:34::i;:::-;2091:53;2116:5;2123:3;2128:8;2138:5;2091:24;:53::i;:::-;2083:62;;;;;;;;1901:251;;;;;:::o;448:55:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4279:295::-;743:10:2;;;;;;;;;;;729:24;;:10;:24;;;721:33;;;;;;;;4455:112:7;;;;;;;;;4496:9;4455:112;;;;;;4542:13;4455:112;;;;;4404:21;:32;4426:9;4404:32;;;;;;;;;;;:48;4437:14;4404:48;;;;;;;;;;;:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4279:295;;;;:::o;510:61::-;;;;;;;;;;;;;;;;;:::o;454:723:4:-;530:14;556:19;587;618:22;652;686:17;715:14;741:15;773:17;793:9;803:8;793:19;;;;;;;;;;;;;;;;;;;;773:39;;840:3;:10;;;;;;;;;;;;832:19;;823:28;;883:3;:15;;;;;;;;;;;;875:24;;861:38;;931:3;:15;;;;;;;;;;;;923:24;;909:38;;982:3;:18;;;;;;;;;;;;974:27;;957:44;;1036:3;:18;;;;;;;;;;;;1028:27;;1011:44;;1085:3;:13;;;;;;;;;;;;1077:22;;1065:34;;1119:3;:11;;1109:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:3;:11;;;;;;;;;;;;1150:20;;;;;;;;1140:30;;454:723;;;;;;;;;;:::o;4164:148:6:-;4246:4;4269:17;:25;4287:6;4269:25;;;;;;;;;;;;;;;:36;4295:9;4269:36;;;;;;;;;;;;;;;;;;;;;;;;;4262:43;;4164:148;;;;:::o;1751:126:2:-;459:10;;;;;;;;;;;445:24;;:10;:24;;;437:33;;;;;;;;1836:1;1817:21;;:7;:21;;;;1809:30;;;;;;;;1863:7;1850:10;;:20;;;;;;;;;;;;;;;;;;1751:126;:::o;203:173:9:-;261:7;316:9;285:1;280;:6;276:35;;;303:1;296:8;;;;276:35;332:1;328;:5;316:17;;355:1;350;346;:5;;;;;;;;:10;339:18;;;;;;370:1;363:8;;203:173;;;;;;:::o;5074:232:6:-;5191:1;5152:41;;:17;:27;5170:8;5152:27;;;;;;;;;;;;;;;;;;;;;:41;;;5144:50;;;;;;;;5234:3;5204:17;:27;5222:8;5204:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;5271:28;5297:1;5271:16;:21;5288:3;5271:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;5247:16;:21;5264:3;5247:21;;;;;;;;;;;;;;;:52;;;;5074:232;;:::o;1007:129:9:-;1065:7;1080:9;1096:1;1092;:5;1080:17;;1115:1;1110;:6;;1103:14;;;;;;1130:1;1123:8;;1007:129;;;;;:::o;5781:303:6:-;5886:6;5865:27;;:17;5873:8;5865:7;:17::i;:::-;:27;;;5857:36;;;;;;;;5949:1;5907:44;;:20;:30;5928:8;5907:30;;;;;;;;;;;;;;;;;;;;;:44;;;;5903:175;;;6008:1;5967:20;:30;5988:8;5967:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;6058:8;6054:1;6029:38;;6038:6;6029:38;;;;;;;;;;;;5903:175;5781:303;;:::o;5429:235::-;5535:5;5514:26;;:17;5522:8;5514:7;:17::i;:::-;:26;;;5506:35;;;;;;;;5577:30;5605:1;5577:16;:23;5594:5;5577:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;5551:16;:23;5568:5;5551:23;;;;;;;;;;;;;;;:56;;;;5655:1;5617:17;:27;5635:8;5617:27;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;5429:235;;:::o;6173:250::-;6259:4;6275:13;6291:17;6299:8;6291:7;:17::i;:::-;6275:33;;6337:5;6325:17;;:8;:17;;;:54;;;;6371:8;6346:33;;:21;6358:8;6346:11;:21::i;:::-;:33;;;6325:54;:91;;;;6383:33;6400:5;6407:8;6383:16;:33::i;:::-;6325:91;6318:98;;6173:250;;;;;:::o;2815:322:3:-;2926:4;3010:13;2947:16;:3;:14;;;:16::i;:::-;2946:17;2942:59;;;2986:4;2979:11;;;;2942:59;3041:3;3026:36;;;3063:5;3070:8;3080:5;3026:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3026:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3026:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3026:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3026:60:3;;;;;;;;;;;;;;;;3010:76;;1414:10;3114:15;;3104:25;;;:6;:25;;;;3096:34;;2815:322;;;;;;;;:::o;835:110:9:-;893:7;920:1;915;:6;;908:14;;;;;;939:1;935;:5;928:12;;835:110;;;;:::o;451:150:8:-;508:4;520:12;569:4;557:17;549:25;;595:1;588:4;:8;581:15;;451:150;;;;:::o;56:1315:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\nimport \"./MineorityMint.sol\";\n\ncontract MineorityCore is MineorityMint {\n\n    //**Main contract with all admin stuff**//\n  \n    constructor() public {\n        // the creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n    }\n\n    function() external payable {\n        \n    }\n\n    //* Returns all information of a given token\n    // check return datatypes to be all 256 or what\n    // same with minting\n    function getToken(uint256 _tokenId) public view\n        returns (\n          uint256 asicID,\n          uint256 pciVendorID,\n          uint256 pciDeviceID,\n          uint256 pciSubDeviceID,\n          uint256 pciSubVendorID,\n          uint256 memSizeMB,\n          string memInfo,\n          uint256 GPUType\n    ) {\n        Token storage tok = allTokens[_tokenId];\n\n        asicID = uint256(tok.asicID);\n        pciVendorID = uint256(tok.pciVendorID);\n        pciDeviceID = uint256(tok.pciDeviceID);\n        pciSubDeviceID = uint256(tok.pciSubDeviceID);\n        pciSubVendorID = uint256(tok.pciSubVendorID);\n        memSizeMB = uint256(tok.memSizeMB);\n        memInfo = tok.memInfo;\n        GPUType = uint256(tok.GPUType);\n    }\n\n    //* Withdraw all contract balance to CFO address\n    // Requires sender to be CFO address\n    function withdrawFunds() external onlyCFO {\n        cfoAddress.transfer(this.balance);\n    }\n}\n",
  "sourcePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
  "ast": {
    "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
    "exportedSymbols": {
      "MineorityCore": [
        525
      ]
    },
    "id": 526,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 413,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityMint.sol",
        "file": "./MineorityMint.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 649,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 415,
              "name": "MineorityMint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "82:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MineorityMint_$648",
                "typeString": "contract MineorityMint"
              }
            },
            "id": 416,
            "nodeType": "InheritanceSpecifier",
            "src": "82:13:4"
          }
        ],
        "contractDependencies": [
          129,
          292,
          411,
          648,
          1198,
          1747
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 525,
        "linearizedBaseContracts": [
          525,
          648,
          1747,
          1198,
          129,
          411,
          292
        ],
        "name": "MineorityCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "174:98:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "242:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3578,
                        "src": "255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "242:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 425,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:4"
            },
            "scope": 525,
            "src": "153:119:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "306:16:4",
              "statements": []
            },
            "documentation": null,
            "id": 429,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:4"
            },
            "scope": 525,
            "src": "278:44:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "763:414:4",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "tok",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "773:17:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                        "typeString": "struct MineorityBase.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 330,
                        "src": "773:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                          "typeString": "struct MineorityBase.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "793:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$330_storage_$dyn_storage",
                        "typeString": "struct MineorityBase.Token storage ref[] storage ref"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "803:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "793:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$330_storage",
                      "typeString": "struct MineorityBase.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "773:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "asicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "823:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "840:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 317,
                          "src": "840:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "832:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "823:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 463,
                      "name": "pciVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "861:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "883:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "883:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "875:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "875:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "861:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "861:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "pciDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "909:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "931:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "931:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "923:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "923:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "909:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "909:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "pciSubDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "957:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "982:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 323,
                          "src": "982:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "974:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "974:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "957:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "957:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 484,
                      "name": "pciSubVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "1011:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1036:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "1036:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1028:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1011:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "memSizeMB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "1065:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1085:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "memSizeMB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 327,
                          "src": "1085:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1077:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1077:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1065:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "memInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1109:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "tok",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "1119:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                          "typeString": "struct MineorityBase.Token storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "memInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "1119:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1109:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "GPUType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "1140:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1158:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "GPUType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 329,
                          "src": "1158:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_asicManufacturer_$313",
                            "typeString": "enum MineorityBase.asicManufacturer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_asicManufacturer_$313",
                            "typeString": "enum MineorityBase.asicManufacturer"
                          }
                        ],
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1150:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1150:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1140:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:30:4"
                }
              ]
            },
            "documentation": null,
            "id": 511,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "472:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "asicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "530:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "name": "pciVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "556:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "pciDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "587:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "name": "pciSubDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "618:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "name": "pciSubVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "652:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "name": "memSizeMB",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "686:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "memInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "715:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "GPUType",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "741:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:244:4"
            },
            "scope": 525,
            "src": "454:723:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "1319:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 519,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3611,
                          "src": "1349:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MineorityCore_$525",
                            "typeString": "contract MineorityCore"
                          }
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1349:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "cfoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1329:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1329:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:33:4"
                }
              ]
            },
            "documentation": null,
            "id": 524,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 513,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1311:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1311:7:4"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:0:4"
            },
            "scope": 525,
            "src": "1277:92:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 526,
        "src": "56:1315:4"
      }
    ],
    "src": "0:1372:4"
  },
  "legacyAST": {
    "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityCore.sol",
    "exportedSymbols": {
      "MineorityCore": [
        525
      ]
    },
    "id": 526,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 413,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/andrew/Projects/truffleTest/wemine/contracts/MineorityMint.sol",
        "file": "./MineorityMint.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 649,
        "src": "25:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 415,
              "name": "MineorityMint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 648,
              "src": "82:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MineorityMint_$648",
                "typeString": "contract MineorityMint"
              }
            },
            "id": 416,
            "nodeType": "InheritanceSpecifier",
            "src": "82:13:4"
          }
        ],
        "contractDependencies": [
          129,
          292,
          411,
          648,
          1198,
          1747
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 525,
        "linearizedBaseContracts": [
          525,
          648,
          1747,
          1198,
          129,
          411,
          292
        ],
        "name": "MineorityCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "174:98:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "242:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3578,
                        "src": "255:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "255:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "242:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "242:23:4"
                }
              ]
            },
            "documentation": null,
            "id": 425,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:4"
            },
            "scope": 525,
            "src": "153:119:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "306:16:4",
              "statements": []
            },
            "documentation": null,
            "id": 429,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:4"
            },
            "scope": 525,
            "src": "278:44:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "763:414:4",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "name": "tok",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "773:17:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                        "typeString": "struct MineorityBase.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 330,
                        "src": "773:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                          "typeString": "struct MineorityBase.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "793:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Token_$330_storage_$dyn_storage",
                        "typeString": "struct MineorityBase.Token storage ref[] storage ref"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "803:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "793:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$330_storage",
                      "typeString": "struct MineorityBase.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "773:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "asicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "823:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "840:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asicID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 317,
                          "src": "840:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "832:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "832:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "823:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "823:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 463,
                      "name": "pciVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "861:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 465,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "883:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "883:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "875:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "875:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "861:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "861:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "pciDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "909:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "931:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 321,
                          "src": "931:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "923:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "923:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "909:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "909:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "pciSubDeviceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "957:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 479,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "982:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubDeviceID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 323,
                          "src": "982:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "974:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "974:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "957:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "957:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 484,
                      "name": "pciSubVendorID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "1011:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1036:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pciSubVendorID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 325,
                          "src": "1036:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1028:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1028:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1011:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:44:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "memSizeMB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "1065:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1085:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "memSizeMB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 327,
                          "src": "1085:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1077:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1077:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1065:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "memInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "1109:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "tok",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "1119:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                          "typeString": "struct MineorityBase.Token storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "memInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "1119:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1109:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1109:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "GPUType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "1140:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "tok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "1158:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$330_storage_ptr",
                              "typeString": "struct MineorityBase.Token storage pointer"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "GPUType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 329,
                          "src": "1158:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_asicManufacturer_$313",
                            "typeString": "enum MineorityBase.asicManufacturer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_asicManufacturer_$313",
                            "typeString": "enum MineorityBase.asicManufacturer"
                          }
                        ],
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1150:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1150:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1140:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:30:4"
                }
              ]
            },
            "documentation": null,
            "id": 511,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "472:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "471:18:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "asicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "530:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "name": "pciVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "556:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "name": "pciDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "587:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "name": "pciSubDeviceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "618:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "name": "pciSubVendorID",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "652:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "name": "memSizeMB",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "686:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "memInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "715:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "GPUType",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "741:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:244:4"
            },
            "scope": 525,
            "src": "454:723:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "1319:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 519,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3611,
                          "src": "1349:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MineorityCore_$525",
                            "typeString": "contract MineorityCore"
                          }
                        },
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1349:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "cfoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1329:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1329:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:33:4"
                }
              ]
            },
            "documentation": null,
            "id": 524,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 513,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 179,
                  "src": "1311:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1311:7:4"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:0:4"
            },
            "scope": 525,
            "src": "1277:92:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 526,
        "src": "56:1315:4"
      }
    ],
    "src": "0:1372:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xcb2395a792751ce36de8bc09cecf8278abbc429d",
      "transactionHash": "0x2e514c0057a01e38ebb13fb4936a41ee3b86969369a7c1c2d21a71cc9b060379"
    },
    "4447": {
      "events": {},
      "links": {},
      "address": "0x059e17ceb15ef8470b7184b858d356317518aab3",
      "transactionHash": "0x9065054be8b0a88d89f73852c8ff04498049cff029c82fe5742ca59923e596f9"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-29T17:31:05.488Z"
}